/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example
import java.time.LocalDate

fun main() {
    nombreyapellido()
    tiposdefuncion()
    rectangulo()
    println(paroimpar(4))
    println(paroimpar(9))
    println(numpositoneg(8))
    println(numpositoneg(-3))
    mostrarNumerosConLoops()
    numparesdel1al20()
}

fun nombreyapellido () {
    val nombre = "Paloma"
    val apellido = "Junent"
    val fecha = LocalDate.now()
    println("¡Hola, Kotlin!")
    println(" Tu nombre completo es $nombre $apellido")
    println("Hoy es $fecha")
}

fun tiposdefuncion () {
    val nombre: String = "Paloma"
    val edad: Int = 16
    val altura: Double = 1.54
    val esEstudiante: Boolean = true

    println("nombre : $nombre")
    println("edad : $edad")
    println("altura : $altura")
    println("es estudiante? : $esEstudiante")
}

fun rectangulo () {
    val alt: Double = 4.5
    val base: Double = 2.25
    val area = base * alt

    println(" El área del rectángulo es : $area")

}


fun paroimpar (numero: Int): String { 
    return when {
        numero % 2 == 0 -> "Par"
        else -> "Impar"
    }       
}

fun numpositoneg (numero: Int): String {
    return when {
        numero < 0 -> "negativo"
        numero > 0 -> "positivo"
        else -> "cero"
    }
}

fun mostrarNumerosConLoops() {
    
    println("for:")
    for (i in 1..10) {
        println(i)
    }
    
    
    println("while:")
    var j = 1
    while (j <= 10) {
        println(j)
        j++
    }
    
    
    println("do-while:")
    var k = 1
    do {
        println(k)
        k++
    } while (k <= 10)
}

fun numparesdel1al20(){
    
    println ("for:")
    for (i in 2..20 step 2) {
        println(i)
    }

    println("while:")
    var j = 2
    while (j <= 20) {
        println(j)
        j+=2
    }

    println("do-while:")
    var k = 2
    do {
        println(k)
        k+=2
    } while (k <= 20)
} 